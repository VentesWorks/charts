global:
  imageRegistry:
  imagePullSecrets: []

nameOverride:
fullnameOverride:

commonLabels: {}
commonAnnotations: {}

extraDeploy: []

service:
  type: NodePort

  # port: 80
  # httpsPort: 443

  # nodePorts:
  #   http:
  #   https:

  # clusterIP:

  # loadBalancerIP:
  # loadBalancerSourceRanges: []
  # externalTrafficPolicy: Cluster

  annotations: {}

components:
  - name: genericapp
    image:
      registry: docker.io
      repository: jabzta84/flaskapp
      tag: latestv4

      pullPolicy: IfNotPresent
      pullSecrets: []

      debug: false

    replicaCount: 1

    livenessProbe:
      enabled: false
      httpGet:
        path: /
        port: 80
      initialDelaySeconds: 5
      periodSeconds: 5
      timeoutSeconds: 5
      failureThreshold: 5
      successThreshold: 5

    readinessProbe:
      enabled: false
      httpGet:
        path: /
        port: 80
      initialDelaySeconds: 5
      periodSeconds: 5
      timeoutSeconds: 5
      failureThreshold: 5
      successThreshold: 5

    customLivenessProbe: {}
    customReadinessProbe: {}

    resources:
      limits: {}
      requests: {}

    podSecurityContext:
      enabled: false
      fsGroup: 1001

    containerSecurityContext:
      enabled: false
      runAsUser: 1001

    existingConfigmap:

    command: []
    args: []

    podLabels: {}
    podAnnotations: {}

    podAffinityPreset: ""
    podAntiAffinityPreset: soft
    nodeAffinityPreset:
      type: ""
      key: ""
      values: []

    affinity: {}
    nodeSelector: {}
    tolerations: []

    updateStrategy:
      type: RollingUpdate

    priorityClassName: ""

    lifecycleHooks: {}

    extraEnvVars: []
    extraEnvVarsCM:
    extraEnvVarsSecret:

  - name: helloapp
    image:
      registry: docker.io
      repository: karthequian/helloworld
      tag: latest

      pullPolicy: IfNotPresent
      pullSecrets: []

      debug: false

    replicaCount: 2

    livenessProbe:
      enabled: false
      httpGet:
        path: /
        port: 80
      initialDelaySeconds: 5
      periodSeconds: 5
      timeoutSeconds: 5
      failureThreshold: 5
      successThreshold: 5

    readinessProbe:
      enabled: false
      httpGet:
        path: /
        port: 80
      initialDelaySeconds: 5
      periodSeconds: 5
      timeoutSeconds: 5
      failureThreshold: 5
      successThreshold: 5

    customLivenessProbe: {}
    customReadinessProbe: {}

    resources:
      limits: {}
      requests: {}

    podSecurityContext:
      enabled: false
      fsGroup: 1001

    containerSecurityContext:
      enabled: false
      runAsUser: 1001

    existingConfigmap:

    command: []
    args: []

    podLabels: {}
    podAnnotations: {}

    podAffinityPreset: ""
    podAntiAffinityPreset: soft
    nodeAffinityPreset:
      type: ""
      key: ""
      values: []

    affinity: {}
    nodeSelector: {}
    tolerations: []

    updateStrategy:
      type: RollingUpdate

    priorityClassName: ""

    lifecycleHooks: {}

    extraEnvVars: []
    extraEnvVarsCM:
    extraEnvVarsSecret:
