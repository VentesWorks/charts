global:
  imageRegistry:
  imagePullSecrets: []

nameOverride:
fullnameOverride:

commonLabels: {}
commonAnnotations: {}

# create config maps and secrets as part of the release
config: {}
existingSecrets: {}

# defaults of pod configs
podDefaults:
  image:
    registry: registry.digitalocean.com
    pullPolicy: Always
    pullSecrets: []

  podLabels: {}
  podAnnotations: {}

  command: []
  args: []

  # set environment variables directly or from config maps or secrets
  extraEnvVars: []
  extraEnvVarsCMs: []
  extraEnvVarsSecrets: []

  podSecurityContext:
    enabled: true
    runAsUser: 1000
    runAsNonRoot: true
    fsGroup: 1000

  containerSecurityContext:
    enabled: true
    runAsUser: 1000
    runAsNonRoot: true
    readOnlyRootFilesystem: false
    allowPrivilegeEscalation: false

  # various settings to manage pod allocation and priorities
  affinity: {}
  podAffinityPreset: ""
  podAntiAffinityPreset: soft
  nodeAffinityPreset:
    type: ""
    key: ""
    values: []

  nodeSelector: {}
  tolerations: []
  priorityClassName: ""

  resources: {}

# defaults of component configs, override pod config defaults
componentDefaults:
  replicaCount: 1

  updateStrategy:
    type: RollingUpdate

  lifecycleHooks: {}

  ports: []

  livenessProbe:
    enabled: false

  readinessProbe:
    enabled: false

# default of cronjob configs, override pod config defaults
cronjobDefaults:
  schedule: 0 0 * * *
  historyLimit: 30
  restartOnFailure: true

# all components of the release (create one deployment for each)
# the first component is the main component
# if the app is a service, the main component is the server component
components: []

# all cronjobs of the release (create one cronjob for each)
cronjobs: []

# extra resources to create
# see https://github.com/bitnami/charts/blob/master/bitnami/kafka/README.md#deploying-extra-resources
extraDeploy: []

# configure the service if any
# type: ClusterIP, NodePort, LoadBalancer
service:
  enabled: false
  # type: ClusterIP
  # annotations: {}
  # port: 80

  # nodePort: 30000

  # loadBalancerIP: []
  # loadBalancerSourceRanges: []
  # externalTrafficPolicy: Cluster

# add this if LoadBalancer service is enabled
ingress:
  enabled: false

  hosts:
    - name: app.leadbook.com
      path: /hello
